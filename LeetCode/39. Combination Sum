Problem Link: https://leetcode.com/problems/combination-sum/description/
Author @ Mahesh Reddy B N
class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ls = new ArrayList<>();
        List<Integer> al = new ArrayList<>();
        helper(ls,candidates,target,0,al);
        return ls;
    }
    public void  helper(List<List<Integer>> ls, int[]c,int target,int curr,List<Integer> al){
        if(target==0){
            ls.add(new ArrayList<>(al));
            return;
        }
        if(target<0 || curr>=c.length) return;
        if(target-c[curr]>=0){
            al.add(c[curr]);
            helper(ls,c,target-c[curr],curr,al);
            al.remove(al.size()-1);
        }
        helper(ls,c,target,curr+1,al);
    }
}